/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DemoLibraryLinks {
        "githubUrl": any;
    }
    interface DemoLightDarkToggle {
        "theme": any;
    }
    interface DemoPaletteSelector {
        "colors": any;
    }
    interface DemoShapeSelector {
        "shape": any;
    }
    interface DemoSizeSelector {
        "size": any;
    }
    interface DemoVariantSelector {
        "variant": any;
    }
}
export interface DemoLightDarkToggleCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDemoLightDarkToggleElement;
}
export interface DemoPaletteSelectorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDemoPaletteSelectorElement;
}
export interface DemoShapeSelectorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDemoShapeSelectorElement;
}
export interface DemoSizeSelectorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDemoSizeSelectorElement;
}
export interface DemoVariantSelectorCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLDemoVariantSelectorElement;
}
declare global {
    interface HTMLDemoLibraryLinksElement extends Components.DemoLibraryLinks, HTMLStencilElement {
    }
    var HTMLDemoLibraryLinksElement: {
        prototype: HTMLDemoLibraryLinksElement;
        new (): HTMLDemoLibraryLinksElement;
    };
    interface HTMLDemoLightDarkToggleElement extends Components.DemoLightDarkToggle, HTMLStencilElement {
    }
    var HTMLDemoLightDarkToggleElement: {
        prototype: HTMLDemoLightDarkToggleElement;
        new (): HTMLDemoLightDarkToggleElement;
    };
    interface HTMLDemoPaletteSelectorElement extends Components.DemoPaletteSelector, HTMLStencilElement {
    }
    var HTMLDemoPaletteSelectorElement: {
        prototype: HTMLDemoPaletteSelectorElement;
        new (): HTMLDemoPaletteSelectorElement;
    };
    interface HTMLDemoShapeSelectorElement extends Components.DemoShapeSelector, HTMLStencilElement {
    }
    var HTMLDemoShapeSelectorElement: {
        prototype: HTMLDemoShapeSelectorElement;
        new (): HTMLDemoShapeSelectorElement;
    };
    interface HTMLDemoSizeSelectorElement extends Components.DemoSizeSelector, HTMLStencilElement {
    }
    var HTMLDemoSizeSelectorElement: {
        prototype: HTMLDemoSizeSelectorElement;
        new (): HTMLDemoSizeSelectorElement;
    };
    interface HTMLDemoVariantSelectorElement extends Components.DemoVariantSelector, HTMLStencilElement {
    }
    var HTMLDemoVariantSelectorElement: {
        prototype: HTMLDemoVariantSelectorElement;
        new (): HTMLDemoVariantSelectorElement;
    };
    interface HTMLElementTagNameMap {
        "demo-library-links": HTMLDemoLibraryLinksElement;
        "demo-light-dark-toggle": HTMLDemoLightDarkToggleElement;
        "demo-palette-selector": HTMLDemoPaletteSelectorElement;
        "demo-shape-selector": HTMLDemoShapeSelectorElement;
        "demo-size-selector": HTMLDemoSizeSelectorElement;
        "demo-variant-selector": HTMLDemoVariantSelectorElement;
    }
}
declare namespace LocalJSX {
    interface DemoLibraryLinks {
        "githubUrl"?: any;
    }
    interface DemoLightDarkToggle {
        "onOnChange"?: (event: DemoLightDarkToggleCustomEvent<any>) => void;
        "theme"?: any;
    }
    interface DemoPaletteSelector {
        "colors"?: any;
        "onOnChange"?: (event: DemoPaletteSelectorCustomEvent<any>) => void;
    }
    interface DemoShapeSelector {
        "onOnChange"?: (event: DemoShapeSelectorCustomEvent<any>) => void;
        "shape"?: any;
    }
    interface DemoSizeSelector {
        "onOnChange"?: (event: DemoSizeSelectorCustomEvent<any>) => void;
        "size"?: any;
    }
    interface DemoVariantSelector {
        "onOnChange"?: (event: DemoVariantSelectorCustomEvent<any>) => void;
        "variant"?: any;
    }
    interface IntrinsicElements {
        "demo-library-links": DemoLibraryLinks;
        "demo-light-dark-toggle": DemoLightDarkToggle;
        "demo-palette-selector": DemoPaletteSelector;
        "demo-shape-selector": DemoShapeSelector;
        "demo-size-selector": DemoSizeSelector;
        "demo-variant-selector": DemoVariantSelector;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "demo-library-links": LocalJSX.DemoLibraryLinks & JSXBase.HTMLAttributes<HTMLDemoLibraryLinksElement>;
            "demo-light-dark-toggle": LocalJSX.DemoLightDarkToggle & JSXBase.HTMLAttributes<HTMLDemoLightDarkToggleElement>;
            "demo-palette-selector": LocalJSX.DemoPaletteSelector & JSXBase.HTMLAttributes<HTMLDemoPaletteSelectorElement>;
            "demo-shape-selector": LocalJSX.DemoShapeSelector & JSXBase.HTMLAttributes<HTMLDemoShapeSelectorElement>;
            "demo-size-selector": LocalJSX.DemoSizeSelector & JSXBase.HTMLAttributes<HTMLDemoSizeSelectorElement>;
            "demo-variant-selector": LocalJSX.DemoVariantSelector & JSXBase.HTMLAttributes<HTMLDemoVariantSelectorElement>;
        }
    }
}
