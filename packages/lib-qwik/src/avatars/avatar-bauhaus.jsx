// GENERATED BY MITOSIS

import { SIZE, generateColors } from "./avatar-bauhaus.utils";
import { Fragment, component$, h } from "@builder.io/qwik";
export const properties = function properties(props, state, name, colors) {
  return generateColors(name, colors);
};
export const getSquareTransform = function getSquareTransform(props, state) {
  return (
    "translate(" +
    properties(props, state, props.name, props.colors)?.[1]?.translateX +
    " " +
    properties(props, state, props.name, props.colors)?.[1]?.translateY +
    ") rotate(" +
    properties(props, state, props.name, props.colors)?.[1]?.rotate +
    " " +
    SIZE / 2 +
    " " +
    SIZE / 2 +
    ")"
  );
};
export const getCircleTransform = function getCircleTransform(props, state) {
  return (
    "translate(" +
    properties(props, state, props.name, props.colors)?.[2]?.translateX +
    " " +
    properties(props, state, props.name, props.colors)?.[2]?.translateY +
    ")"
  );
};
export const getLineTransform = function getLineTransform(props, state) {
  return (
    "translate(" +
    properties(props, state, props.name, props.colors)?.[3]?.translateX +
    " " +
    properties(props, state, props.name, props.colors)?.[3]?.translateY +
    ") rotate(" +
    properties(props, state, props.name, props.colors)?.[3]?.rotate +
    " " +
    SIZE / 2 +
    " " +
    SIZE / 2 +
    ")"
  );
};
export const AvatarBauhaus = component$((props) => {
  const state = {};
  return (
    <svg
      fill="none"
      role="img"
      xmlns="http://www.w3.org/2000/svg"
      viewBox={"0 0 " + SIZE + " " + SIZE}
      width={props.size}
      height={props.size}
    >
      {props.title ? <title>{props.name}</title> : null}
      <mask
        id="mask__bauhaus"
        maskUnits="userSpaceOnUse"
        x={0}
        y={0}
        width={SIZE}
        height={SIZE}
      >
        <rect
          fill="#FFFFFF"
          width={SIZE}
          height={SIZE}
          rx={props.square ? undefined : SIZE * 2}
        ></rect>
      </mask>
      <g mask="url(#mask__bauhaus)">
        <rect
          width={SIZE}
          height={SIZE}
          fill={properties(props, state, props.name, props.colors)?.[0]?.color}
        ></rect>
        <rect
          x={(SIZE - 60) / 2}
          y={(SIZE - 20) / 2}
          width={SIZE}
          height={
            properties(props, state, props.name, props.colors)?.[1]?.isSquare
              ? SIZE
              : SIZE / 8
          }
          fill={properties(props, state, props.name, props.colors)?.[1]?.color}
          transform={getSquareTransform(props, state)}
        ></rect>
        <circle
          cx={SIZE / 2}
          cy={SIZE / 2}
          fill={properties(props, state, props.name, props.colors)?.[2]?.color}
          r={SIZE / 5}
          transform={getCircleTransform(props, state)}
        ></circle>
        <line
          x1={0}
          y1={SIZE / 2}
          x2={SIZE}
          y2={SIZE / 2}
          strokeWidth={2}
          stroke={
            properties(props, state, props.name, props.colors)?.[3]?.color
          }
          transform={getLineTransform(props, state)}
        ></line>
      </g>
    </svg>
  );
});
export default AvatarBauhaus;
