// GENERATED BY MITOSIS

import { coerceVariant, defaultAvatarProps } from "./avatar.utils";
import AvatarBauhaus from "./avatars/avatar-bauhaus";
import AvatarBeam from "./avatars/avatar-beam";
import AvatarMarble from "./avatars/avatar-marble";
import AvatarPixel from "./avatars/avatar-pixel";
import AvatarRing from "./avatars/avatar-ring";
import AvatarSunset from "./avatars/avatar-sunset";
import {
  Fragment,
  component$,
  h,
  useClientEffect$,
  useStore,
  useWatch$,
} from "@builder.io/qwik";
export const Avatar = component$((props) => {
  const state = useStore({
    checkedVariant: defaultAvatarProps.variant || "beam",
    colors_: defaultAvatarProps.colors || [],
    name_: defaultAvatarProps.name || "",
    size_: defaultAvatarProps.size || 40,
    square_: defaultAvatarProps.square || false,
    title_: defaultAvatarProps.title || false,
  });
  useClientEffect$(() => {
    console.log("client:useClientEffect$", props.variant);
    state.checkedVariant = coerceVariant(props.variant) || "beam";
    state.size_ = props.size || defaultAvatarProps.size || 40;
    state.colors_ = props.colors || defaultAvatarProps.colors || [];
    state.square_ = props.square || defaultAvatarProps.square || false;
    state.name_ = props.name || defaultAvatarProps.name || "";
    state.title_ = props.title || defaultAvatarProps.title || false;
  });
  useWatch$(({ track }) => {
    props && track(props, "variant");
    props && track(props, "size");
    props && track(props, "colors");
    props && track(props, "square");
    props && track(props, "name");
    props && track(props, "title");
    state.checkedVariant = coerceVariant(props.variant) || "beam";
    state.size_ = props.size || defaultAvatarProps.size || 40;
    state.colors_ = props.colors || defaultAvatarProps.colors || [];
    state.square_ = props.square || defaultAvatarProps.square || false;
    state.name_ = props.name || defaultAvatarProps.name || "";
    state.title_ = props.title || defaultAvatarProps.title || false;
    console.log("client:useWatch$", props.variant);
  });
  return (
    <Fragment>
      <div>props: {props.variant}</div>
      <div>state: {state.variant_}</div>
      {props.variant === `bauhaus` ? (
        <AvatarBauhaus
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarBauhaus>
      ) : null}
      {props.variant === `beam` ? (
        <AvatarBeam
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarBeam>
      ) : null}
      {props.variant === `marble` ? (
        <AvatarMarble
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarMarble>
      ) : null}
      {props.variant === `pixel` ? (
        <AvatarPixel
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarPixel>
      ) : null}
      {props.variant === `ring` ? (
        <AvatarRing
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarRing>
      ) : null}
      {props.variant === `sunset` ? (
        <AvatarSunset
          colors={props.colors}
          name={state.name_}
          square={state.square_}
          title={state.title_}
          size={state.size_}
        ></AvatarSunset>
      ) : null}
    </Fragment>
  );
});
export default Avatar;
