// GENERATED BY MITOSIS

import { Theme } from "../utils/common.utils";
import { LightDarkToggleProps } from "./light-dark-toggle.utils";
import {
  Fragment,
  component$,
  h,
  useClientEffect$,
  useStore,
  useWatch$,
} from "@builder.io/qwik";
export const handleChange = function handleChange(props, state, event: any) {
  const newTheme =
    state.selectedTheme === Theme.Dark ? Theme.Light : Theme.Dark;
  state.selectedTheme = newTheme;
  props.onChange$(newTheme);
};
export const LightDarkToggle = component$((props: any) => {
  const state = useStore<any>({ selectedTheme: Theme.Light });
  useClientEffect$(() => {
    state.selectedTheme = props.theme || Theme.Light;
  });
  useWatch$(({ track }) => {
    props && track(props, "theme");
    state.selectedTheme = props.theme || Theme.Light;
  });
  return (
    <div class="light-dark-toggle widget-wrapper">
      <label class="checkbox-label" htmlFor="theme-checkbox">
        <input
          id="theme-checkbox"
          type="checkbox"
          class="sr-only radio-item"
          name="theme-checkbox"
          onChange$={(event) => {
            handleChange(props, state, event);
          }}
        ></input>
        <svg width="20" height="20" fill="none">
          <circle
            cx="10"
            cy="10"
            r="9"
            stroke="currentColor"
            stroke-width="2"
          ></circle>
          <path d="M10 0a10 10 0 000 20V0z" fill="currentColor"></path>
        </svg>
      </label>
    </div>
  );
});
export default LightDarkToggle;
